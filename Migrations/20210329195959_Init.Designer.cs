// <auto-generated />
using DatabaseRelationshipTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseRelationshipTest.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210329195959_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseRelationshipTest.Models.MTM.Connector", b =>
                {
                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.HasKey("StaffID", "AddressID");

                    b.HasIndex("AddressID");

                    b.ToTable("Connector");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.MTM.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.MTM.StaffAddress", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.ToTable("StaffAddresses");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.OTM.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.OTM.StudentAddress", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AddressID");

                    b.ToTable("StudentAddresses");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.OTO.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employes");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.OTO.EmployeeAddress", b =>
                {
                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.ToTable("EmployeeAddresses");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.MTM.Connector", b =>
                {
                    b.HasOne("DatabaseRelationshipTest.Models.MTM.StaffAddress", "Address")
                        .WithMany("Connector")
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseRelationshipTest.Models.MTM.Staff", "Staff")
                        .WithMany("Connector")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.OTM.Student", b =>
                {
                    b.HasOne("DatabaseRelationshipTest.Models.OTM.StudentAddress", "Address")
                        .WithMany("Student")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.OTO.EmployeeAddress", b =>
                {
                    b.HasOne("DatabaseRelationshipTest.Models.OTO.Employee", "Employee")
                        .WithOne("EmployeeAddress")
                        .HasForeignKey("DatabaseRelationshipTest.Models.OTO.EmployeeAddress", "AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.MTM.Staff", b =>
                {
                    b.Navigation("Connector");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.MTM.StaffAddress", b =>
                {
                    b.Navigation("Connector");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.OTM.StudentAddress", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("DatabaseRelationshipTest.Models.OTO.Employee", b =>
                {
                    b.Navigation("EmployeeAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
